{
  "meta": {
    "templateCreatedBy": "ContentPro",
    "templateDescription": "AI-powered video transcription and content generation",
    "templateId": "1010",
    "templateName": "AI Video Transcription",
    "templateVersion": "1.0.0"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "video-transcribe",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "video-webhook",
      "name": "Video Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [300, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "headerAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.openaiApi.apiKey }}"
            }
          ]
        },
        "sendBinaryData": true,
        "binaryPropertyName": "file",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "name": "response_format",
              "value": "json"
            },
            {
              "name": "language",
              "value": "{{ $json.language || 'en' }}"
            }
          ]
        }
      },
      "id": "whisper-transcribe",
      "name": "Whisper Transcribe",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [600, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "headerAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.openaiApi.apiKey }}"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a content editor. Create a summary, key points, and actionable insights from video transcriptions.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Analyze this video transcription and create:\\n1. Executive Summary (2-3 sentences)\\n2. Key Points (bullet list)\\n3. Actionable Insights\\n4. Suggested social media posts\\n\\nTranscription: {{ $json.text }}\"\n    }\n  ],\n  \"max_tokens\": 1000,\n  \"temperature\": 0.4\n}"
      },
      "id": "content-analysis",
      "name": "Content Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $node['Video Webhook'].json.generate_blog }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "blog-generation-check",
      "name": "Blog Generation Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "headerAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.openaiApi.apiKey }}"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a professional blog writer. Create engaging, SEO-optimized blog posts from video content.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Create a comprehensive blog post based on this video transcription. Include title, introduction, main sections with headers, and conclusion. Make it SEO-friendly and engaging.\\n\\nTranscription: {{ $node['Whisper Transcribe'].json.text }}\"\n    }\n  ],\n  \"max_tokens\": 2000,\n  \"temperature\": 0.6\n}"
      },
      "id": "blog-generation",
      "name": "Blog Generation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1500, 200]
    },
    {
      "parameters": {
        "resource": "sheet",
        "operation": "append",
        "documentId": "{{ $credentials.googleSheetsOAuth2Api.contentSpreadsheetId }}",
        "sheetName": "Video_Content",
        "fieldsToSend": "defineBelow",
        "fieldsToSendOptions": {
          "fields": [
            {
              "fieldName": "date",
              "fieldValue": "={{ new Date().toISOString() }}"
            },
            {
              "fieldName": "video_title",
              "fieldValue": "={{ $node['Video Webhook'].json.title || 'Untitled Video' }}"
            },
            {
              "fieldName": "transcription",
              "fieldValue": "={{ $node['Whisper Transcribe'].json.text }}"
            },
            {
              "fieldName": "analysis",
              "fieldValue": "={{ $node['Content Analysis'].json.choices[0].message.content }}"
            },
            {
              "fieldName": "blog_post",
              "fieldValue": "={{ $json.choices?.[0]?.message?.content || 'Not generated' }}"
            }
          ]
        }
      },
      "id": "save-content",
      "name": "Save Content",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [1800, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "transcription",
              "value": "={{ $node['Whisper Transcribe'].json.text }}"
            },
            {
              "name": "analysis",
              "value": "={{ $node['Content Analysis'].json.choices[0].message.content }}"
            },
            {
              "name": "blog_generated",
              "value": "={{ $json.choices?.[0]?.message?.content ? 'true' : 'false' }}"
            }
          ]
        }
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [2100, 300]
    }
  ],
  "connections": {
    "Video Webhook": {
      "main": [
        [
          {
            "node": "Whisper Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Whisper Transcribe": {
      "main": [
        [
          {
            "node": "Content Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Analysis": {
      "main": [
        [
          {
            "node": "Blog Generation Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Blog Generation Check": {
      "main": [
        [
          {
            "node": "Blog Generation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Blog Generation": {
      "main": [
        [
          {
            "node": "Save Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Content": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "tags": ["video", "transcription", "ai", "content", "whisper"],
  "triggerCount": 0,
  "updatedAt": "2024-08-14T00:00:00.000Z",
  "versionId": "1"
}